% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aem.R, R/plot.R
\name{aem}
\alias{aem}
\alias{solve.aem}
\alias{contour.aem}
\alias{plot.element}
\alias{plot.aem}
\title{Create a analytic element model}
\usage{
aem(k, top, base, n, ..., type = c("variable", "confined"))

\method{solve}{aem}(a, b, ...)

\method{contour}{aem}(aem, x, y, z = c("heads", "streamfunction", "potential"), asp = 1, ...)

\method{plot}{element}(x, y = NULL, add = FALSE, pch = 16, cex = 0.75, ...)

\method{plot}{aem}(x, y = NULL, add = FALSE, xlim, ylim, frame.plot = TRUE, ...)
}
\arguments{
\item{k}{numeric, hydraulic conductivity of aquifer}

\item{top}{numeric, top elevation of aquifer}

\item{base}{numeric, base elevation of aquifer}

\item{n}{numeric, effective porosity of aquifer as a fraction of total unit volume. Used for determining flow velocities with \code{\link[=velocity]{velocity()}}.}

\item{...}{ignored}

\item{type}{character specifying the type of flow in the aquifer, either \code{variable} (default) or \code{confined}. See details.}

\item{a}{\code{aem} object}

\item{b}{ignored}

\item{aem}{\code{aem} object}

\item{x}{\code{aem} object, or analytic element of class \code{element} to plot. If not a point or line geometry, nothing is plotted.}

\item{y}{ignored}

\item{z}{character indicating which variable to plot. Possible values are \code{heads} (default),
\code{streamfunction} and \code{potential}.}

\item{asp}{the \code{y/x} aspect ratio, see \code{\link[=plot.window]{plot.window()}}. Defaults to 1 (equal unit lengths).}

\item{add}{logical, should the plot be added to the existing plot? Defaults to \code{FALSE}.}

\item{pch}{numeric point symbol value, defaults to \code{16}.}

\item{cex}{numeric symbol size value, defaults to \code{0.75}.}

\item{xlim}{numeric, plot limits along the x-axis. Required if \code{add = FALSE}.}

\item{ylim}{numeric, plot limits along the y-axis. Required if \code{add = FALSE}.}

\item{frame.plot}{logical, should a border be drawn around the plot. Defaults to \code{TRUE}.}
}
\value{
\code{\link[=aem]{aem()}} returns an object of class \code{aem} which is a list consisting of \code{k}, \code{top}, \code{base}, \code{n},
a list containing all elements with the names of the objects specified in \code{...}, and a logical \code{solved}
indicating if the model is solved.

The solved \code{aem} object, i.e. after finding the solution
to the system of equations as constructed by the contained elements.
}
\description{
\code{\link[=aem]{aem()}} creates an analytic element model to which elements can be added

\code{\link[=solve.aem]{solve.aem()}} solves system of equations as constructed by the supplied  elements in the \code{aem} model

\code{\link[=contour.aem]{contour.aem()}} creates a contour plot of a computed variable, or adds the contour lines
to and existing plot.

\code{\link[=plot.element]{plot.element()}} plots the location of an analytic element with point or line geometry.

\code{\link[=plot.aem]{plot.aem()}} plots the planar locations of all analytic elements with a point or line geometry
in an \code{aem} object by calling \code{\link[=plot.element]{plot.element()}} on them, or adds them to an existing plot.
}
\details{
The default \code{type = 'variable'} allows for unconfined/confined flow, i.e. flow with variable saturated thickness. If \code{type = 'confined'},
the saturated thickness is always constant and equal to the aquifer thickness.

When calling \code{\link[=aem]{aem()}}, if an element of class \code{headequation} is supplied, \code{\link[=solve.aem]{solve.aem()}} is called on the \code{aem}
object before it is returned.

\code{\link[=solve.aem]{solve.aem()}} sets up the system of equations, and calls \code{\link[=solve]{solve()}} to
solve. If head-specified elements are supplied, an element of class \code{constant} as
created by \code{\link[=constant]{constant()}} (also called the reference point), should be supplied as well.

Constructing an \code{aem} object by a call to \code{\link[=aem]{aem()}} automatically calls \code{\link[=solve.aem]{solve.aem()}}.

If the analytic element has a point geometry and has a collocation point
(e.g. \code{\link[=headwell]{headwell()}}), that point is also plotted.

A reference point (as created by \code{\link[=constant]{constant()}}) is never plotted.
}
\examples{
k <- 10
top <- 10
base <- 0
n <- 0.2
TR <- k * (top - base)

w <- well(xw = 50, yw = 0, Q = 200)
rf <- constant(xc = -500, yc = 0, h = 20)
uf <- uniformflow(gradient = 0.002, angle = -45, TR = TR)

aem(k, top, base, n, w, rf, uf)
aem(k, top, base, n, list('well' = w, 'constant' = rf, 'flow' = uf), type = 'confined')


rf <- constant(-500, 0, 20)
hdw <- headwell(xw = 0, yw = 100, rw = 0.3, hc = 8)
w <- well(0, 0, Q = 200)
ml <- aem(k = 10, top = 10, base = 0, n = 0.2, rf, hdw, w)
ml <- solve(ml)

# no reference point results in error
try(
ml <- aem(k = 10, top = 10, base = 0, n = 0.2, w, hdw)
)


w <- well(xw = 50, yw = 0, Q = 200)
wi <- well(xw = 0, yw = 0, Q = -100)
uf <- uniformflow(gradient = 0.002, angle = -45, TR = 100)
ml <- aem(k = 10, top = 10, base = 0, n = 0.2, w, wi, uf)

xg <- seq(-100, 100, length = 500)
yg <- seq(-75, 75, length = 100)

contour(ml, xg, yg, nlevels = 20, col = 'dodgerblue3', labcex = 1)
contour(ml, xg, yg, 'streamfunction', nlevels = 20, col = 'orange3', drawlabels = FALSE, add = TRUE)

ls <- linesink(x0 = -200, y0 = -150, x1 = 200, y1 = 150, sigma = 0.1)
w <- well(xw = 50, yw = 0, Q = 200)
uf <- uniformflow(gradient = 0.002, angle = -45, TR = 100)

plot(ls)
plot(w, add = TRUE)
plot(uf) # empty

w <- well(xw = 50, yw = 0, Q = 200)
wi <- well(xw = 0, yw = 0, Q = -100)
uf <- uniformflow(gradient = 0.002, angle = -45, TR = 100)
ls <- linesink(-75, 50, 100, 50, sigma = 1)
ml <- aem(k = 10, top = 10, base = 0, n = 0.2, w, wi, uf, ls)

plot(ml, xlim = c(-100, 100), ylim = c(-75, 75))

xg <- seq(-100, 100, length = 500)
yg <- seq(-75, 75, length = 100)

contour(ml, xg, yg, nlevels = 20, col = 'dodgerblue3')
plot(ml, add = TRUE)

}
\seealso{
\code{\link[=add_element]{add_element()}}
}
