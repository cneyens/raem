% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tracelines.R, R/plot.R
\name{capzone}
\alias{capzone}
\alias{plot.capzone}
\title{Calculate capture zone of a well element}
\usage{
capzone(aem, well, time, npar = 30, dt = time/100, as.poly = TRUE, ...)

\method{plot}{capzone}(capzone, col = "#BEBEBE90", add = FALSE, ...)
}
\arguments{
\item{aem}{\code{aem} object}

\item{well}{well analytic element of class \code{well} or inherits from it.}

\item{time}{numeric, time of the capture zone}

\item{npar}{integer, number of particles to use in the backward tracking. Defaults to 30.}

\item{dt}{numeric, time discretization used in the particle tracking. Defaults \code{time / 100}.}

\item{as.poly}{logical, should the convex hull of the traces (default) be returned or the paths. See details.}

\item{...}{}
}
\value{
\code{\link[=capzone]{capzone()}} returns an object of class \code{capzone} if \code{as.poly = TRUE}, which is a matrix with \code{npar} rows
and columns \code{x} and \code{y} specifying the coordinates of the convex hull delineating the \code{time} capture zone of \code{well}.
If \code{as.poly = FALSE}, the output of \code{\link[=tracelines]{tracelines()}} is returned directly.
}
\description{
\code{\link[=capzone]{capzone()}} determines the capture zone of a well element in the flow field by performing backward
particle tracking until the requested time is reached.
}
\details{
Backward particle tracking is performed using \code{\link[=tracelines]{tracelines()}} and setting the \code{forward = FALSE}.
Initial particle locations are computed by equally spacing \code{npar} locations at the well radius.
If \code{as.poly = TRUE}, the convex hull of all particle locations is computed and returned. If \code{FALSE},
the output of \code{\link[=tracelines]{tracelines()}} is returned.
}
\examples{

k <- 10
top <- 10; base <- 0
n <- 0.3

uf <- uniformflow(TR = 100, gradient = 0.001, angle = -10)
rf <- constant(TR, xc = -1000, yc = 0, hc = 10)
w1 = well(200, 50, Q = 250)
w2 = well(-200, -100, Q = 450)

m <- aem(k, top, base, n = n, uf, rf, w1, w2)

cp5 <- capzone(m, w1, time = 5*365)
cp10 <- capzone(m, w2, time = 10*365, as.poly = FALSE)

xg <- seq(-800, 800, length = 100)
yg <- seq(-500, 500, length = 100)

contour(m, xg, yg, col = 'dodgerblue3', nlevels = 20)
plot(cp5, add = TRUE)
plot(cp10, add = TRUE)

}
\seealso{
\code{\link[=tracelines]{tracelines()}}
}
