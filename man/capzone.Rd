% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tracelines.R, R/plot.R
\name{capzone}
\alias{capzone}
\alias{plot.capzone}
\title{Calculate capture zone of a well element}
\usage{
capzone(
  aem,
  well,
  time,
  npar = 30,
  dt = time/100,
  zstart = aem$base,
  as.poly = TRUE,
  ...
)

\method{plot}{capzone}(x, y = NULL, col = "#BEBEBE90", add = FALSE, ...)
}
\arguments{
\item{aem}{\code{aem} object}

\item{well}{well analytic element of class \code{well} or inherits from it.}

\item{time}{numeric, time of the capture zone}

\item{npar}{integer, number of particles to use in the backward tracking. Defaults to 30.}

\item{dt}{numeric, time discretization used in the particle tracking. Defaults \code{time / 100}.}

\item{zstart}{numeric vector with the starting elevations of the particles. Defaults to the base of the aquifer. See details.}

\item{as.poly}{logical, should the convex hull of the traces (default) be returned or the paths. See details.}

\item{...}{additional arguments passed to \code{\link[=tracelines]{tracelines()}} for \code{\link[=capzone]{capzone()}} or additional arguments passed to \code{\link[=polygon]{polygon()}} when plotting.}

\item{x}{object of class \code{capzone}}

\item{y}{ignored}

\item{col}{colour of polygon. Defaults to a light grey with reduced opacity.}

\item{add}{logical, should the plot be added to the existing plot? Defaults to \code{FALSE}.}
}
\value{
\code{\link[=capzone]{capzone()}} returns an object of class \code{capzone} if \code{as.poly = TRUE}, which is a matrix with columns \code{x} and \code{y}
specifying the coordinates of the convex hull delineating the \code{time} capture zone of \code{well}.
If \code{as.poly = FALSE}, the output of \code{\link[=tracelines]{tracelines()}} is returned directly.
}
\description{
\code{\link[=capzone]{capzone()}} determines the capture zone of a well element in the flow field by performing backward
particle tracking until the requested time is reached.

\code{\link[=plot.capzone]{plot.capzone()}} plots a \code{capzone} object as a polygon.
}
\details{
Backward particle tracking is performed using \code{\link[=tracelines]{tracelines()}} and setting the \code{forward = FALSE}.
Initial particle locations are computed by equally spacing \code{npar} locations at the well radius and repeating this
for all \code{zstart} elevations. The total number of particles equals \code{npar * length(zstart)}.

Note that different \code{zstart} values only have an effect in models with vertical flow components, i.e. models with area-sinks.

If \code{as.poly = TRUE}, the convex hull of all particle locations is computed and returned. If \code{FALSE},
the output of \code{\link[=tracelines]{tracelines()}} is returned.
}
\examples{

k <- 10
top <- 10; base <- 0
n <- 0.3

uf <- uniformflow(TR = 100, gradient = 0.001, angle = -10)
rf <- constant(TR, xc = -1000, yc = 0, hc = 10)
w1 = well(200, 50, Q = 250)
w2 = well(-200, -100, Q = 450)

m <- aem(k, top, base, n = n, uf, rf, w1, w2)

cp5 <- capzone(m, w1, time = 5*365)
cp10 <- capzone(m, w2, time = 10*365, as.poly = FALSE)

xg <- seq(-800, 800, length = 100)
yg <- seq(-500, 500, length = 100)

contour(m, xg, yg, col = 'dodgerblue3', nlevels = 20)
plot(cp5, add = TRUE)
plot(cp10, add = TRUE)

# model with vertical flow components
as <- areasink(0, 0, N = 0.001, R = 1500)
m <- aem(k, top, base, n = n, uf, rf, w1, w2, as)

# three different starting levels, returns convex hull of all particles
cp5 <- capzone(m, w1, time = 5*365, zstart = c(0, 5, 8))

contour(m, xg, yg, col = 'dodgerblue3', nlevels = 20)
plot(cp5, add = TRUE)

# one starting level at z = 8, smaller zone
cp5_z8 <- capzone(m, w1, time = 5*365, zstart = 8)
plot(cp5_z8, add = TRUE, col = 'orange3')

}
\seealso{
\code{\link[=tracelines]{tracelines()}}
}
